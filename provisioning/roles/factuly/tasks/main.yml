---
- name: Create group
  group: >
    name={{factuly_group}} gid={{factuly_gid}} state=present

- name: Create user
  user: >
    name={{factuly_user}} uid={{factuly_uid}} group={{factuly_group}}
    home={{factuly_home}} createhome=yes shell=/bin/false state=present

- name: copy the sudoers file so we can perform agent-forwarding
  copy: >
    src=files/99-keep-ssh-auth-sock-env
    dest=/etc/sudoers.d/99-keep-ssh-auth-sock-env
    owner=root
    group=root
    mode=0440
    validate='visudo -cf %s'
  become: true

###
### Running stuff as {{factuly_user}} whenever permissions need to be preserved
###

- name: Clone application repository
  git: >
    repo={{factuly_repo_url}} dest={{factuly_repo}}
    version=master accept_hostkey=yes force=yes
  become: true

- name: Create folders
  file: >
    path={{item}} owner={{factuly_user}} group={{factuly_group}}
    mode=1700 state=directory
  with_items:
    - "{{factuly_home}}"
    - "{{factuly_home}}/gems"
    - "{{factuly_repo}}"
    - "{{factuly_repo}}/shared/pids"
    - "{{factuly_repo}}/shared/sockets"
    - "{{factuly_repo}}/shared/log"

- name: set file ownership for cloned repo
  file: >
    path="{{factuly_repo}}" state=directory recurse=yes owner={{factuly_user}} group={{factuly_user}}
  become: true

  # For private apps, copy the key file and specify "key_file" in the git task
  # Use git-crypt, ansible-vault or anything that you want
  # But don't commit secret files unencrypted, even in private repositories

- name: Copy dotEnv for this server
  copy: >
    src=.env dest={{factuly_repo}}/.env owner={{factuly_user}} group={{factuly_group}} mode=0600

- name: Symlink persistent folders
  file: state=link force=yes src={{item.src}} dest={{item.dest}}
  with_items:
    - { src: "{{factuly_home}}/gems", dest: "{{factuly_repo}}/vendor/bundle" }

- name: Bundle install in deployment mode
  shell: >
    bundle install --deployment --clean --without development test
  args:
    chdir: "{{factuly_repo}}"
  become_user: "{{factuly_user}}"

### At this point, you may want to run any custom tasks
### (like db:migrate, assets:precompile, etc)
### Just like the bundle install above
- name: config database.yml
  template: src=database.yml.j2 dest={{ factuly_repo }}/config/database.yml

#move RAILS_ENV outta here
- name: migrate database
  command: bundle exec rake db:migrate RAILS_ENV="production" chdir={{ factuly_repo }}

- name: seed the database
  command: bundle exec rake db:seed RAILS_ENV="production" chdir={{ factuly_repo }}

- name: precompile assets
  command: bundle exec rake assets:precompile RAILS_ENV="production" chdir={{ factuly_repo }}

- name: Create system service
  shell: >
    PATH=$(pwd):$PATH bundle exec foreman export -a factuly -u {{factuly_user}} upstart /etc/init/
  args:
    chdir: "{{factuly_repo}}"

- name: Restart service and enable at boot
  service: name=factuly state=restarted enabled=yes
